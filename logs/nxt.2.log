2021-03-10 22:27:45 INFO: nxt.enableStackTraces = "true"
2021-03-10 22:27:45 INFO: nxt.enableLogTraceback = "false"
2021-03-10 22:27:45 INFO: logging enabled
2021-03-10 22:27:45 INFO: socksProxyHost not defined
2021-03-10 22:27:45 INFO: socksProxyPort not defined
2021-03-10 22:27:45 FINE: java.version = 1.8.0_221
2021-03-10 22:27:45 FINE: java.vm.version = 25.221-b11
2021-03-10 22:27:45 FINE: java.vm.name = Java HotSpot(TM) 64-Bit Server VM
2021-03-10 22:27:45 FINE: java.vendor = Oracle Corporation
2021-03-10 22:27:45 FINE: java.vm.vendor = Oracle Corporation
2021-03-10 22:27:45 FINE: java.home = /Library/Java/JavaVirtualMachines/jdk1.8.0_221.jdk/Contents/Home/jre
2021-03-10 22:27:45 FINE: java.library.path = /Users/ibnux/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
2021-03-10 22:27:45 FINE: java.class.path = classes:lib/jetty-continuation-9.3.28.v20191105.jar:lib/lucene-core-5.5.5.jar:lib/slf4j-api-1.7.22.jar:lib/javapoet-1.11.0.jar:lib/tika-core-1.13.jar:lib/websocket-servlet-9.3.28.v20191105.jar:lib/websocket-api-9.3.28.v20191105.jar:lib/slf4j-jdk14-1.7.22.jar:lib/websocket-client-9.3.28.v20191105.jar:lib/javax.servlet-api-3.1.0.jar:lib/jetty-io-9.3.28.v20191105.jar:lib/websocket-common-9.3.28.v20191105.jar:lib/jetty-server-9.3.28.v20191105.jar:lib/jetty-util-9.3.28.v20191105.jar:lib/lucene-backward-codecs-5.5.5.jar:lib/jetty-servlets-9.3.28.v20191105.jar:lib/javase-3.3.0.jar:lib/json-simple-1.1.1.jar:lib/lucene-queryparser-5.5.5.jar:lib/jetty-servlet-9.3.28.v20191105.jar:lib/jetty-client-9.3.28.v20191105.jar:lib/lucene-analyzers-common-5.5.5.jar:lib/bcprov-jdk15on-160.jar:lib/tika-parsers-1.13.jar:lib/h2-1.4.200.jar:lib/jetty-http-9.3.28.v20191105.jar:lib/jetty-proxy-9.3.28.v20191105.jar:lib/lucene-queries-5.5.5.jar:lib/websocket-server-9.3.28.v20191105.jar:lib/core-3.3.0.jar:lib/weupnp-0.1.4.jar:lib/jetty-security-9.3.28.v20191105.jar:conf:addons/classes:addons/lib/*:javafx-sdk/lib/*
2021-03-10 22:27:45 FINE: os.arch = x86_64
2021-03-10 22:27:45 FINE: sun.arch.data.model = 64
2021-03-10 22:27:45 FINE: os.name = Mac OS X
2021-03-10 22:27:45 FINE: file.encoding = UTF-8
2021-03-10 22:27:45 FINE: java.security.policy = null
2021-03-10 22:27:45 FINE: java.security.manager = null
2021-03-10 22:27:45 FINE: nxt.runtime.mode = null
2021-03-10 22:27:45 FINE: nxt.runtime.dirProvider = null
2021-03-10 22:27:45 FINE: availableProcessors = 8
2021-03-10 22:27:45 FINE: maxMemory = 1908932608
2021-03-10 22:27:45 FINE: processId = 12460
2021-03-10 22:27:45 INFO: nxt.isTestnet = "false"
2021-03-10 22:27:45 INFO: nxt.isOffline = "false"
2021-03-10 22:27:45 INFO: nxt.isLightClient = "false"
2021-03-10 22:27:45 INFO: nxt.customLoginWarning not defined
2021-03-10 22:27:45 INFO: nxt.maxNumberOfTransactions not defined or not numeric, using default value 255
2021-03-10 22:27:45 INFO: nxt.maxRollback = "800"
2021-03-10 22:27:45 INFO: nxt.forgingDelay = "20"
2021-03-10 22:27:45 INFO: nxt.forgingSpeedup = "3"
2021-03-10 22:27:45 INFO: nxt.batchCommitSize = "100"
2021-03-10 22:27:45 INFO: nxt.maxPrunableLifetime = "7776000"
2021-03-10 22:27:45 INFO: nxt.includeExpiredPrunable = "true"
2021-03-10 22:27:45 INFO: nxt.correctInvalidFees = "false"
2021-03-10 22:27:45 INFO: nxt.disableFullTextSearch = "false"
2021-03-10 22:27:45 INFO: nxt.disableMetadataDetection = "false"
2021-03-10 22:27:45 INFO: nxt.statementLogThreshold = "10000"
2021-03-10 22:27:45 INFO: nxt.transactionLogThreshold = "15000"
2021-03-10 22:27:45 INFO: nxt.transactionLogInterval = "15"
2021-03-10 22:27:45 INFO: nxt.dbCacheKB = "0"
2021-03-10 22:27:45 INFO: nxt.dbUrl not defined
2021-03-10 22:27:45 INFO: nxt.dbType = "h2"
2021-03-10 22:27:45 INFO: nxt.dbDir = "./snd_db/nxt"
2021-03-10 22:27:45 INFO: nxt.dbParams = "DB_CLOSE_ON_EXIT=FALSE"
2021-03-10 22:27:45 INFO: nxt.dbUsername = "sa"
2021-03-10 22:27:45 INFO: nxt.dbPassword = "{not logged}"
2021-03-10 22:27:45 INFO: nxt.maxDbConnections = "30"
2021-03-10 22:27:45 INFO: nxt.dbLoginTimeout = "70"
2021-03-10 22:27:45 INFO: nxt.dbDefaultLockTimeout = "60"
2021-03-10 22:27:45 INFO: nxt.dbMaxMemoryRows = "1000000"
2021-03-10 22:27:45 FINE: Database jdbc url set to jdbc:h2:./snd_db/nxt;DB_CLOSE_ON_EXIT=FALSE;CACHE_SIZE=262144 username sa
2021-03-10 22:27:45 INFO: nxt.connectionPoolImpl = "nxt.db.pool.H2ConnectionPool"
2021-03-10 22:27:45 INFO: nxt.useStrongSecureRandom = "false"
2021-03-10 22:27:47 FINE: Database connection pool current size: 1
2021-03-10 22:27:47 INFO: Initializing an empty database
2021-03-10 22:27:47 FINE: Database connection pool current size: 2
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS block (db_id IDENTITY, id BIGINT NOT NULL, version INT NOT NULL, timestamp INT NOT NULL, previous_block_id BIGINT, total_amount BIGINT NOT NULL, total_fee BIGINT NOT NULL, payload_length INT NOT NULL, previous_block_hash BINARY(32), cumulative_difficulty VARBINARY NOT NULL, base_target BIGINT NOT NULL, next_block_id BIGINT, height INT NOT NULL, generation_signature BINARY(64) NOT NULL, block_signature BINARY(64) NOT NULL, payload_hash BINARY(32) NOT NULL, generator_id BIGINT NOT NULL)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS block_id_idx ON block (id)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS transaction (db_id IDENTITY, id BIGINT NOT NULL, deadline SMALLINT NOT NULL, recipient_id BIGINT, transaction_index SMALLINT NOT NULL, amount BIGINT NOT NULL, fee BIGINT NOT NULL, full_hash BINARY(32) NOT NULL, height INT NOT NULL, block_id BIGINT NOT NULL, signature BINARY(64) NOT NULL, timestamp INT NOT NULL, type TINYINT NOT NULL, subtype TINYINT NOT NULL, sender_id BIGINT NOT NULL, block_timestamp INT NOT NULL, referenced_transaction_full_hash BINARY(32), phased BOOLEAN NOT NULL DEFAULT FALSE, attachment_bytes VARBINARY, version TINYINT NOT NULL, has_message BOOLEAN NOT NULL DEFAULT FALSE, has_encrypted_message BOOLEAN NOT NULL DEFAULT FALSE, has_public_key_announcement BOOLEAN NOT NULL DEFAULT FALSE, ec_block_height INT DEFAULT NULL, ec_block_id BIGINT DEFAULT NULL, has_encrypttoself_message BOOLEAN NOT NULL DEFAULT FALSE, has_prunable_message BOOLEAN NOT NULL DEFAULT FALSE, has_prunable_encrypted_message BOOLEAN NOT NULL DEFAULT FALSE, has_prunable_attachment BOOLEAN NOT NULL DEFAULT FALSE)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS transaction_id_idx ON transaction (id)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS block_height_idx ON block (height)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS block_generator_id_idx ON block (generator_id)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS transaction_sender_id_idx ON transaction (sender_id)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS transaction_recipient_id_idx ON transaction (recipient_id)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS peer (address VARCHAR PRIMARY KEY, last_updated INT, services BIGINT)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS transaction_block_timestamp_idx ON transaction (block_timestamp DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS alias (db_id IDENTITY, id BIGINT NOT NULL, account_id BIGINT NOT NULL, alias_name VARCHAR NOT NULL, alias_name_lower VARCHAR NOT NULL, alias_uri VARCHAR NOT NULL, timestamp INT NOT NULL, height INT NOT NULL, latest BOOLEAN NOT NULL DEFAULT TRUE)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS alias_id_height_idx ON alias (id, height DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS alias_account_id_idx ON alias (account_id, height DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS alias_name_lower_idx ON alias (alias_name_lower)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS alias_offer (db_id IDENTITY, id BIGINT NOT NULL, price BIGINT NOT NULL, buyer_id BIGINT, height INT NOT NULL, latest BOOLEAN DEFAULT TRUE NOT NULL)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS alias_offer_id_height_idx ON alias_offer (id, height DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS asset (db_id IDENTITY, id BIGINT NOT NULL, account_id BIGINT NOT NULL, name VARCHAR NOT NULL, description VARCHAR, quantity BIGINT NOT NULL, decimals TINYINT NOT NULL, initial_quantity BIGINT NOT NULL, height INT NOT NULL, latest BOOLEAN NOT NULL DEFAULT TRUE)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS asset_account_id_idx ON asset (account_id)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS trade (db_id IDENTITY, asset_id BIGINT NOT NULL, block_id BIGINT NOT NULL, ask_order_id BIGINT NOT NULL, bid_order_id BIGINT NOT NULL, ask_order_height INT NOT NULL, bid_order_height INT NOT NULL, seller_id BIGINT NOT NULL, buyer_id BIGINT NOT NULL, is_buy BOOLEAN NOT NULL, quantity BIGINT NOT NULL, price BIGINT NOT NULL, timestamp INT NOT NULL, height INT NOT NULL)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS trade_asset_id_idx ON trade (asset_id, height DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS trade_seller_id_idx ON trade (seller_id, height DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS trade_buyer_id_idx ON trade (buyer_id, height DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS ask_order (db_id IDENTITY, id BIGINT NOT NULL, account_id BIGINT NOT NULL, asset_id BIGINT NOT NULL, price BIGINT NOT NULL, transaction_index SMALLINT NOT NULL, transaction_height INT NOT NULL, quantity BIGINT NOT NULL, creation_height INT NOT NULL, height INT NOT NULL, latest BOOLEAN NOT NULL DEFAULT TRUE)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS ask_order_id_height_idx ON ask_order (id, height DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS ask_order_account_id_idx ON ask_order (account_id, height DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS ask_order_asset_id_price_idx ON ask_order (asset_id, price)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS bid_order (db_id IDENTITY, id BIGINT NOT NULL, account_id BIGINT NOT NULL, asset_id BIGINT NOT NULL, price BIGINT NOT NULL, transaction_index SMALLINT NOT NULL, transaction_height INT NOT NULL, quantity BIGINT NOT NULL, creation_height INT NOT NULL, height INT NOT NULL, latest BOOLEAN NOT NULL DEFAULT TRUE)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS bid_order_id_height_idx ON bid_order (id, height DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS bid_order_account_id_idx ON bid_order (account_id, height DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS bid_order_asset_id_price_idx ON bid_order (asset_id, price DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS goods (db_id IDENTITY, id BIGINT NOT NULL, seller_id BIGINT NOT NULL, name VARCHAR NOT NULL, description VARCHAR, parsed_tags ARRAY, has_image BOOLEAN NOT NULL, tags VARCHAR, timestamp INT NOT NULL, quantity INT NOT NULL, price BIGINT NOT NULL, delisted BOOLEAN NOT NULL, height INT NOT NULL, latest BOOLEAN NOT NULL DEFAULT TRUE)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS goods_id_height_idx ON goods (id, height DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS goods_seller_id_name_idx ON goods (seller_id, name)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS goods_timestamp_idx ON goods (timestamp DESC, height DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS purchase (db_id IDENTITY, id BIGINT NOT NULL, buyer_id BIGINT NOT NULL, goods_id BIGINT NOT NULL, seller_id BIGINT NOT NULL, quantity INT NOT NULL, price BIGINT NOT NULL, deadline INT NOT NULL, note VARBINARY, nonce BINARY(32), timestamp INT NOT NULL, pending BOOLEAN NOT NULL, goods VARBINARY, goods_nonce BINARY(32), goods_is_text BOOLEAN NOT NULL DEFAULT TRUE, refund_note VARBINARY, refund_nonce BINARY(32), has_feedback_notes BOOLEAN NOT NULL DEFAULT FALSE, has_public_feedbacks BOOLEAN NOT NULL DEFAULT FALSE, discount BIGINT NOT NULL, refund BIGINT NOT NULL, height INT NOT NULL, latest BOOLEAN NOT NULL DEFAULT TRUE)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS purchase_id_height_idx ON purchase (id, height DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS purchase_buyer_id_height_idx ON purchase (buyer_id, height DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS purchase_seller_id_height_idx ON purchase (seller_id, height DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS purchase_deadline_idx ON purchase (deadline DESC, height DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS account (db_id IDENTITY, id BIGINT NOT NULL, balance BIGINT NOT NULL, unconfirmed_balance BIGINT NOT NULL, has_control_phasing BOOLEAN NOT NULL DEFAULT FALSE, forged_balance BIGINT NOT NULL, active_lessee_id BIGINT, height INT NOT NULL, latest BOOLEAN NOT NULL DEFAULT TRUE)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS account_id_height_idx ON account (id, height DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS account_asset (db_id IDENTITY, account_id BIGINT NOT NULL, asset_id BIGINT NOT NULL, quantity BIGINT NOT NULL, unconfirmed_quantity BIGINT NOT NULL, height INT NOT NULL, latest BOOLEAN NOT NULL DEFAULT TRUE)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS account_asset_id_height_idx ON account_asset (account_id, asset_id, height DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS account_guaranteed_balance (db_id IDENTITY, account_id BIGINT NOT NULL, additions BIGINT NOT NULL, height INT NOT NULL)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS account_guaranteed_balance_id_height_idx ON account_guaranteed_balance (account_id, height DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS purchase_feedback (db_id IDENTITY, id BIGINT NOT NULL, feedback_data VARBINARY NOT NULL, feedback_nonce BINARY(32) NOT NULL, height INT NOT NULL, latest BOOLEAN NOT NULL DEFAULT TRUE)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS purchase_feedback_id_height_idx ON purchase_feedback (id, height DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS purchase_public_feedback (db_id IDENTITY, id BIGINT NOT NULL, public_feedback VARCHAR NOT NULL, height INT NOT NULL, latest BOOLEAN NOT NULL DEFAULT TRUE)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS purchase_public_feedback_id_height_idx ON purchase_public_feedback (id, height DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS unconfirmed_transaction (db_id IDENTITY, id BIGINT NOT NULL, expiration INT NOT NULL, transaction_height INT NOT NULL, fee_per_byte BIGINT NOT NULL, arrival_timestamp BIGINT NOT NULL, transaction_bytes VARBINARY NOT NULL, prunable_json VARCHAR, height INT NOT NULL)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS unconfirmed_transaction_id_idx ON unconfirmed_transaction (id)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS asset_transfer (db_id IDENTITY, id BIGINT NOT NULL, asset_id BIGINT NOT NULL, sender_id BIGINT NOT NULL, recipient_id BIGINT NOT NULL, quantity BIGINT NOT NULL, timestamp INT NOT NULL, height INT NOT NULL)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS asset_transfer_id_idx ON asset_transfer (id)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS asset_transfer_asset_id_idx ON asset_transfer (asset_id, height DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS asset_transfer_sender_id_idx ON asset_transfer (sender_id, height DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS asset_transfer_recipient_id_idx ON asset_transfer (recipient_id, height DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS account_asset_quantity_idx ON account_asset (quantity DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS purchase_timestamp_idx ON purchase (timestamp DESC, id)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS ask_order_creation_idx ON ask_order (creation_height DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS bid_order_creation_idx ON bid_order (creation_height DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS block_timestamp_idx ON block (timestamp DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS tag (db_id IDENTITY, tag VARCHAR NOT NULL, in_stock_count INT NOT NULL, total_count INT NOT NULL, height INT NOT NULL, latest BOOLEAN NOT NULL DEFAULT TRUE)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS tag_tag_idx ON tag (tag, height DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS tag_in_stock_count_idx ON tag (in_stock_count DESC, height DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS currency (db_id IDENTITY, id BIGINT NOT NULL, account_id BIGINT NOT NULL, name VARCHAR NOT NULL, name_lower VARCHAR NOT NULL, code VARCHAR NOT NULL, description VARCHAR, type INT NOT NULL, initial_supply BIGINT NOT NULL DEFAULT 0, reserve_supply BIGINT NOT NULL, max_supply BIGINT NOT NULL, creation_height INT NOT NULL, issuance_height INT NOT NULL, min_reserve_per_unit_nqt BIGINT NOT NULL, min_difficulty TINYINT NOT NULL, max_difficulty TINYINT NOT NULL, ruleset TINYINT NOT NULL, algorithm TINYINT NOT NULL, decimals TINYINT NOT NULL DEFAULT 0,height INT NOT NULL, latest BOOLEAN NOT NULL DEFAULT TRUE)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS currency_id_height_idx ON currency (id, height DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS currency_account_id_idx ON currency (account_id)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS account_currency (db_id IDENTITY, account_id BIGINT NOT NULL, currency_id BIGINT NOT NULL, units BIGINT NOT NULL, unconfirmed_units BIGINT NOT NULL, height INT NOT NULL, latest BOOLEAN NOT NULL DEFAULT TRUE)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS account_currency_id_height_idx ON account_currency (account_id, currency_id, height DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS currency_founder (db_id IDENTITY, currency_id BIGINT NOT NULL, account_id BIGINT NOT NULL, amount BIGINT NOT NULL, height INT NOT NULL, latest BOOLEAN NOT NULL DEFAULT TRUE)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS currency_founder_currency_id_idx ON currency_founder (currency_id, account_id, height DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS currency_mint (db_id IDENTITY, currency_id BIGINT NOT NULL, account_id BIGINT NOT NULL, counter BIGINT NOT NULL, height INT NOT NULL, latest BOOLEAN NOT NULL DEFAULT TRUE)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS currency_mint_currency_id_account_id_idx ON currency_mint (currency_id, account_id, height DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS buy_offer (db_id IDENTITY, id BIGINT NOT NULL, currency_id BIGINT NOT NULL, account_id BIGINT NOT NULL,rate BIGINT NOT NULL, unit_limit BIGINT NOT NULL, supply BIGINT NOT NULL, expiration_height INT NOT NULL,creation_height INT NOT NULL, transaction_index SMALLINT NOT NULL, transaction_height INT NOT NULL, height INT NOT NULL, latest BOOLEAN NOT NULL DEFAULT TRUE)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS buy_offer_id_idx ON buy_offer (id, height DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS buy_offer_currency_id_account_id_idx ON buy_offer (currency_id, account_id, height DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS sell_offer (db_id IDENTITY, id BIGINT NOT NULL, currency_id BIGINT NOT NULL, account_id BIGINT NOT NULL, rate BIGINT NOT NULL, unit_limit BIGINT NOT NULL, supply BIGINT NOT NULL, expiration_height INT NOT NULL, creation_height INT NOT NULL, transaction_index SMALLINT NOT NULL, transaction_height INT NOT NULL, height INT NOT NULL, latest BOOLEAN NOT NULL DEFAULT TRUE)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS sell_offer_id_idx ON sell_offer (id, height DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS sell_offer_currency_id_account_id_idx ON sell_offer (currency_id, account_id, height DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS exchange (db_id IDENTITY, transaction_id BIGINT NOT NULL, currency_id BIGINT NOT NULL, block_id BIGINT NOT NULL, offer_id BIGINT NOT NULL, seller_id BIGINT NOT NULL, buyer_id BIGINT NOT NULL, units BIGINT NOT NULL, rate BIGINT NOT NULL, timestamp INT NOT NULL, height INT NOT NULL)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS exchange_offer_idx ON exchange (transaction_id, offer_id)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS exchange_currency_id_idx ON exchange (currency_id, height DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS exchange_seller_id_idx ON exchange (seller_id, height DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS exchange_buyer_id_idx ON exchange (buyer_id, height DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS currency_transfer (db_id IDENTITY, id BIGINT NOT NULL, currency_id BIGINT NOT NULL, sender_id BIGINT NOT NULL, recipient_id BIGINT NOT NULL, units BIGINT NOT NULL, timestamp INT NOT NULL, height INT NOT NULL)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS currency_transfer_id_idx ON currency_transfer (id)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS currency_transfer_currency_id_idx ON currency_transfer (currency_id, height DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS currency_transfer_sender_id_idx ON currency_transfer (sender_id, height DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS currency_transfer_recipient_id_idx ON currency_transfer (recipient_id, height DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS account_currency_units_idx ON account_currency (units DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS currency_name_idx ON currency (name_lower, height DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS currency_code_idx ON currency (code, height DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS buy_offer_rate_height_idx ON buy_offer (rate DESC, creation_height ASC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS sell_offer_rate_height_idx ON sell_offer (rate ASC, creation_height ASC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS unconfirmed_transaction_height_fee_timestamp_idx ON unconfirmed_transaction (transaction_height ASC, fee_per_byte DESC, arrival_timestamp ASC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS scan (rescan BOOLEAN NOT NULL DEFAULT FALSE, height INT NOT NULL DEFAULT 0, validate BOOLEAN NOT NULL DEFAULT FALSE)
2021-03-10 22:27:47 FINE: Will apply sql:
INSERT INTO scan (rescan, height, validate) VALUES (false, 0, false)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS currency_creation_height_idx ON currency (creation_height DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS currency_supply (db_id IDENTITY, id BIGINT NOT NULL, current_supply BIGINT NOT NULL, current_reserve_per_unit_nqt BIGINT NOT NULL, height INT NOT NULL, latest BOOLEAN NOT NULL DEFAULT TRUE)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS currency_supply_id_height_idx ON currency_supply (id, height DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS public_key (db_id IDENTITY, account_id BIGINT NOT NULL, public_key BINARY(32), height INT NOT NULL, latest BOOLEAN NOT NULL DEFAULT TRUE)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS account_guaranteed_balance_height_idx ON account_guaranteed_balance(height)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS asset_transfer_height_idx ON asset_transfer(height)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS currency_transfer_height_idx ON currency_transfer(height)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS exchange_height_idx ON exchange(height)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS trade_height_idx ON trade(height)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS vote (db_id IDENTITY, id BIGINT NOT NULL, poll_id BIGINT NOT NULL, voter_id BIGINT NOT NULL, vote_bytes VARBINARY NOT NULL, height INT NOT NULL)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS vote_id_idx ON vote (id)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS vote_poll_id_idx ON vote (poll_id, voter_id)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS poll (db_id IDENTITY, id BIGINT NOT NULL, account_id BIGINT NOT NULL, name VARCHAR NOT NULL, description VARCHAR, options ARRAY NOT NULL, min_num_options TINYINT, max_num_options TINYINT, min_range_value TINYINT, max_range_value TINYINT, timestamp INT NOT NULL, finish_height INT NOT NULL, voting_model TINYINT NOT NULL, min_balance BIGINT, min_balance_model TINYINT, holding_id BIGINT, height INT NOT NULL)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS poll_result (db_id IDENTITY, poll_id BIGINT NOT NULL, result BIGINT, weight BIGINT NOT NULL, height INT NOT NULL)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS phasing_poll (db_id IDENTITY, id BIGINT NOT NULL, account_id BIGINT NOT NULL, whitelist_size TINYINT NOT NULL DEFAULT 0, finish_height INT NOT NULL, voting_model TINYINT NOT NULL, quorum BIGINT, min_balance BIGINT, holding_id BIGINT, min_balance_model TINYINT, hashed_secret VARBINARY, algorithm TINYINT, height INT NOT NULL)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS phasing_vote (db_id IDENTITY, vote_id BIGINT NOT NULL, transaction_id BIGINT NOT NULL, voter_id BIGINT NOT NULL, height INT NOT NULL)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS phasing_poll_voter (db_id IDENTITY, transaction_id BIGINT NOT NULL, voter_id BIGINT NOT NULL, height INT NOT NULL)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS vote_height_idx ON vote(height)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS poll_id_idx ON poll(id)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS poll_height_idx ON poll(height)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS poll_account_idx ON poll(account_id)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS poll_finish_height_idx ON poll(finish_height DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS poll_result_poll_id_idx ON poll_result(poll_id)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS poll_result_height_idx ON poll_result(height)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS phasing_poll_id_idx ON phasing_poll(id)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS phasing_poll_height_idx ON phasing_poll(height)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS phasing_poll_account_id_idx ON phasing_poll(account_id, height DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS phasing_poll_holding_id_idx ON phasing_poll(holding_id, height DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS phasing_vote_transaction_voter_idx ON phasing_vote(transaction_id, voter_id)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS phasing_poll_voter_transaction_voter_idx ON phasing_poll_voter(transaction_id, voter_id)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS phasing_poll_result (db_id IDENTITY, id BIGINT NOT NULL, result BIGINT NOT NULL, approved BOOLEAN NOT NULL, height INT NOT NULL)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS phasing_poll_result_id_idx ON phasing_poll_result(id)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS phasing_poll_result_height_idx ON phasing_poll_result(height)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS currency_founder_account_id_idx ON currency_founder (account_id, height DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS phasing_poll_voter_height_idx ON phasing_poll_voter(height)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS phasing_vote_height_idx ON phasing_vote(height)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS trade_ask_idx ON trade (ask_order_id, height DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS trade_bid_idx ON trade (bid_order_id, height DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS account_info (db_id IDENTITY, account_id BIGINT NOT NULL, name VARCHAR, description VARCHAR, height INT NOT NULL, latest BOOLEAN NOT NULL DEFAULT TRUE)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS account_info_id_height_idx ON account_info (account_id, height DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS prunable_message (db_id IDENTITY, id BIGINT NOT NULL, sender_id BIGINT NOT NULL, recipient_id BIGINT, message VARBINARY, message_is_text BOOLEAN NOT NULL, is_compressed BOOLEAN NOT NULL, encrypted_message VARBINARY, encrypted_is_text BOOLEAN DEFAULT FALSE, block_timestamp INT NOT NULL, transaction_timestamp INT NOT NULL, height INT NOT NULL)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS prunable_message_id_idx ON prunable_message (id)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS prunable_message_transaction_timestamp_idx ON prunable_message (transaction_timestamp DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS prunable_message_sender_idx ON prunable_message (sender_id)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS prunable_message_recipient_idx ON prunable_message (recipient_id)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS prunable_message_block_timestamp_dbid_idx ON prunable_message (block_timestamp DESC, db_id DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS tagged_data (db_id IDENTITY, id BIGINT NOT NULL, account_id BIGINT NOT NULL, name VARCHAR NOT NULL, description VARCHAR, tags VARCHAR, parsed_tags ARRAY, type VARCHAR, data VARBINARY NOT NULL, is_text BOOLEAN NOT NULL, channel VARCHAR, filename VARCHAR, block_timestamp INT NOT NULL, transaction_timestamp INT NOT NULL, height INT NOT NULL, latest BOOLEAN NOT NULL DEFAULT TRUE)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS tagged_data_id_height_idx ON tagged_data (id, height DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS tagged_data_expiration_idx ON tagged_data (transaction_timestamp DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS tagged_data_account_id_height_idx ON tagged_data (account_id, height DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS tagged_data_block_timestamp_height_db_id_idx ON tagged_data (block_timestamp DESC, height DESC, db_id DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS data_tag (db_id IDENTITY, tag VARCHAR NOT NULL, tag_count INT NOT NULL, height INT NOT NULL, latest BOOLEAN NOT NULL DEFAULT TRUE)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS data_tag_tag_height_idx ON data_tag (tag, height DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS data_tag_count_height_idx ON data_tag (tag_count DESC, height DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS tagged_data_timestamp (db_id IDENTITY, id BIGINT NOT NULL, timestamp INT NOT NULL, height INT NOT NULL, latest BOOLEAN NOT NULL DEFAULT TRUE)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS tagged_data_timestamp_id_height_idx ON tagged_data_timestamp (id, height DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS tagged_data_channel_idx ON tagged_data (channel, height DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS account_active_lessee_id_idx ON account (active_lessee_id)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS account_lease (db_id IDENTITY, lessor_id BIGINT NOT NULL, current_leasing_height_from INT, current_leasing_height_to INT, current_lessee_id BIGINT, next_leasing_height_from INT, next_leasing_height_to INT, next_lessee_id BIGINT, height INT NOT NULL, latest BOOLEAN NOT NULL DEFAULT TRUE)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS account_lease_lessor_id_height_idx ON account_lease (lessor_id, height DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS account_lease_current_leasing_height_from_idx ON account_lease (current_leasing_height_from)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS account_lease_current_leasing_height_to_idx ON account_lease (current_leasing_height_to)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS account_lease_height_id_idx ON account_lease (height, lessor_id)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS account_asset_asset_id_idx ON account_asset (asset_id)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS account_currency_currency_id_idx ON account_currency (currency_id)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS currency_issuance_height_idx ON currency (issuance_height)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS unconfirmed_transaction_expiration_idx ON unconfirmed_transaction (expiration DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS account_height_id_idx ON account (height, id)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS account_asset_height_id_idx ON account_asset (height, account_id, asset_id)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS account_currency_height_id_idx ON account_currency (height, account_id, currency_id)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS alias_height_id_idx ON alias (height, id)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS alias_offer_height_id_idx ON alias_offer (height, id)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS ask_order_height_id_idx ON ask_order (height, id)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS bid_order_height_id_idx ON bid_order (height, id)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS buy_offer_height_id_idx ON buy_offer (height, id)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS currency_height_id_idx ON currency (height, id)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS currency_founder_height_id_idx ON currency_founder (height, currency_id, account_id)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS currency_mint_height_id_idx ON currency_mint (height, currency_id, account_id)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS currency_supply_height_id_idx ON currency_supply (height, id)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS goods_height_id_idx ON goods (height, id)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS purchase_height_id_idx ON purchase (height, id)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS purchase_feedback_height_id_idx ON purchase_feedback (height, id)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS purchase_public_feedback_height_id_idx ON purchase_public_feedback (height, id)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS sell_offer_height_id_idx ON sell_offer (height, id)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS tag_height_tag_idx ON tag (height, tag)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS account_info_height_id_idx ON account_info (height, account_id)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS tagged_data_timestamp_height_id_idx ON tagged_data_timestamp (height, id)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS trade_height_db_id_idx ON trade (height DESC, db_id DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS exchange_height_db_id_idx ON exchange (height DESC, db_id DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS exchange_request (db_id IDENTITY, id BIGINT NOT NULL, account_id BIGINT NOT NULL, currency_id BIGINT NOT NULL, units BIGINT NOT NULL, rate BIGINT NOT NULL, is_buy BOOLEAN NOT NULL, timestamp INT NOT NULL, height INT NOT NULL)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS exchange_request_id_idx ON exchange_request (id)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS exchange_request_account_currency_idx ON exchange_request (account_id, currency_id, height DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS exchange_request_currency_idx ON exchange_request (currency_id, height DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS exchange_request_height_db_id_idx ON exchange_request (height DESC, db_id DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS exchange_request_height_idx ON exchange_request (height)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS account_ledger (db_id IDENTITY, account_id BIGINT NOT NULL, event_type TINYINT NOT NULL, event_id BIGINT NOT NULL, holding_type TINYINT NOT NULL, holding_id BIGINT, change BIGINT NOT NULL, balance BIGINT NOT NULL, block_id BIGINT NOT NULL, height INT NOT NULL, timestamp INT NOT NULL)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS account_ledger_id_idx ON account_ledger(account_id, db_id)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS account_ledger_height_idx ON account_ledger(height)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS tagged_data_extend (db_id IDENTITY, id BIGINT NOT NULL, extend_id BIGINT NOT NULL, height INT NOT NULL, latest BOOLEAN NOT NULL DEFAULT TRUE)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS tagged_data_extend_id_height_idx ON tagged_data_extend(id, height DESC)
2021-03-10 22:27:47 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS tagged_data_extend_height_id_idx ON tagged_data_extend(height, id)
2021-03-10 22:27:48 INFO: Lucene search index deleted
2021-03-10 22:27:49 INFO: H2 fulltext function aliases dropped
2021-03-10 22:27:49 INFO: NRS fulltext schema created
2021-03-10 22:27:49 INFO: Rebuilding the Lucene search index
2021-03-10 22:27:49 INFO: Lucene search index deleted
2021-03-10 22:27:49 INFO: Lucene search index successfully rebuilt
2021-03-10 22:27:49 INFO: NRS fulltext aliases created
2021-03-10 22:27:49 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS asset_id_height_idx ON asset (id, height DESC)
2021-03-10 22:27:49 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS asset_height_id_idx ON asset (height, id)
2021-03-10 22:27:49 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS shuffling (db_id IDENTITY, id BIGINT NOT NULL, holding_id BIGINT NULL, holding_type TINYINT NOT NULL, issuer_id BIGINT NOT NULL, amount BIGINT NOT NULL, participant_count TINYINT NOT NULL, blocks_remaining SMALLINT NULL, stage TINYINT NOT NULL, assignee_account_id BIGINT NULL, registrant_count TINYINT NOT NULL, recipient_public_keys ARRAY, height INT NOT NULL, latest BOOLEAN NOT NULL DEFAULT TRUE)
2021-03-10 22:27:49 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS shuffling_id_height_idx ON shuffling (id, height DESC)
2021-03-10 22:27:49 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS shuffling_holding_id_height_idx ON shuffling (holding_id, height DESC)
2021-03-10 22:27:49 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS shuffling_assignee_account_id_height_idx ON shuffling (assignee_account_id, height DESC)
2021-03-10 22:27:49 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS shuffling_height_id_idx ON shuffling (height, id)
2021-03-10 22:27:49 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS shuffling_participant (db_id IDENTITY, shuffling_id BIGINT NOT NULL, account_id BIGINT NOT NULL, next_account_id BIGINT NULL, participant_index TINYINT NOT NULL, state TINYINT NOT NULL, blame_data ARRAY, key_seeds ARRAY, data_transaction_full_hash BINARY(32), height INT NOT NULL, latest BOOLEAN NOT NULL DEFAULT TRUE)
2021-03-10 22:27:49 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS shuffling_participant_shuffling_id_account_id_idx ON shuffling_participant (shuffling_id, account_id, height DESC)
2021-03-10 22:27:49 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS shuffling_participant_height_idx ON shuffling_participant (height, shuffling_id, account_id)
2021-03-10 22:27:49 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS shuffling_data (db_id IDENTITY, shuffling_id BIGINT NOT NULL, account_id BIGINT NOT NULL, data ARRAY, transaction_timestamp INT NOT NULL, height INT NOT NULL)
2021-03-10 22:27:49 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS shuffling_data_id_height_idx ON shuffling_data (shuffling_id, height DESC)
2021-03-10 22:27:49 FINE: Will apply sql:
CREATE INDEX shuffling_data_transaction_timestamp_idx ON shuffling_data (transaction_timestamp DESC)
2021-03-10 22:27:49 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS phasing_poll_linked_transaction (db_id IDENTITY, transaction_id BIGINT NOT NULL, linked_full_hash BINARY(32) NOT NULL, linked_transaction_id BIGINT NOT NULL, height INT NOT NULL)
2021-03-10 22:27:49 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS phasing_poll_linked_transaction_id_link_idx ON phasing_poll_linked_transaction (transaction_id, linked_transaction_id)
2021-03-10 22:27:49 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS phasing_poll_linked_transaction_height_idx ON phasing_poll_linked_transaction (height)
2021-03-10 22:27:49 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS phasing_poll_linked_transaction_link_id_idx ON phasing_poll_linked_transaction (linked_transaction_id, transaction_id)
2021-03-10 22:27:49 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS account_control_phasing (db_id IDENTITY, account_id BIGINT NOT NULL, whitelist ARRAY, voting_model TINYINT NOT NULL, quorum BIGINT, min_balance BIGINT, holding_id BIGINT, min_balance_model TINYINT, max_fees BIGINT, min_duration SMALLINT, max_duration SMALLINT, height INT NOT NULL, latest BOOLEAN NOT NULL DEFAULT TRUE)
2021-03-10 22:27:49 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS account_control_phasing_id_height_idx ON account_control_phasing (account_id, height DESC)
2021-03-10 22:27:49 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS account_control_phasing_height_id_idx ON account_control_phasing (height, account_id)
2021-03-10 22:27:49 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS account_property (db_id IDENTITY, id BIGINT NOT NULL, recipient_id BIGINT NOT NULL, setter_id BIGINT, property VARCHAR NOT NULL, value VARCHAR, height INT NOT NULL, latest BOOLEAN NOT NULL DEFAULT TRUE)
2021-03-10 22:27:49 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS account_property_id_height_idx ON account_property (id, height DESC)
2021-03-10 22:27:49 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS account_property_height_id_idx ON account_property (height, id)
2021-03-10 22:27:49 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS account_property_recipient_height_idx ON account_property (recipient_id, height DESC)
2021-03-10 22:27:49 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS account_property_setter_recipient_idx ON account_property (setter_id, recipient_id)
2021-03-10 22:27:49 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS asset_history (db_id IDENTITY, id BIGINT NOT NULL, asset_id BIGINT NOT NULL, account_id BIGINT NOT NULL, quantity BIGINT NOT NULL, timestamp INT NOT NULL, height INT NOT NULL)
2021-03-10 22:27:49 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS asset_history_id_idx ON asset_history (id)
2021-03-10 22:27:49 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS asset_history_asset_id_idx ON asset_history (asset_id, height DESC)
2021-03-10 22:27:49 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS asset_history_account_id_idx ON asset_history (account_id, height DESC)
2021-03-10 22:27:49 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS asset_history_height_idx ON asset_history (height)
2021-03-10 22:27:49 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS referenced_transaction (db_id IDENTITY, transaction_id BIGINT NOT NULL, FOREIGN KEY (transaction_id) REFERENCES transaction (id) ON DELETE CASCADE, referenced_transaction_id BIGINT NOT NULL)
2021-03-10 22:27:49 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS referenced_transaction_referenced_transaction_id_idx ON referenced_transaction (referenced_transaction_id)
2021-03-10 22:27:49 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS shuffling_blocks_remaining_height_idx ON shuffling (blocks_remaining, height DESC)
2021-03-10 22:27:49 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS asset_dividend (db_id IDENTITY, id BIGINT NOT NULL, asset_id BIGINT NOT NULL, holding_id BIGINT NOT NULL DEFAULT 0, holding_type TINYINT NOT NULL DEFAULT 0, amount BIGINT NOT NULL, dividend_height INT NOT NULL, total_dividend BIGINT NOT NULL, num_accounts BIGINT NOT NULL, timestamp INT NOT NULL, height INT NOT NULL)
2021-03-10 22:27:49 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS asset_dividend_id_idx ON asset_dividend (id)
2021-03-10 22:27:49 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS asset_dividend_asset_id_idx ON asset_dividend (asset_id, height DESC)
2021-03-10 22:27:49 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS asset_dividend_height_idx ON asset_dividend (height)
2021-03-10 22:27:49 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS public_key_account_id_height_idx ON public_key (account_id, height DESC)
2021-03-10 22:27:49 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS transaction_block_id_idx ON transaction (block_id)
2021-03-10 22:27:49 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS public_key_height_idx ON public_key (height)
2021-03-10 22:27:49 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS prunable_message_height_idx ON prunable_message (height)
2021-03-10 22:27:49 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS tagged_data_height_idx ON tagged_data (height)
2021-03-10 22:27:49 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS data_tag_height_idx ON data_tag (height)
2021-03-10 22:27:49 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS shuffling_data_height_idx ON shuffling_data (height)
2021-03-10 22:27:49 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS asset_property (   db_id IDENTITY,    id BIGINT NOT NULL,    asset_id BIGINT NOT NULL,    setter_id BIGINT NOT NULL,    property VARCHAR NOT NULL,    value VARCHAR,    height INT NOT NULL,    latest BOOLEAN NOT NULL DEFAULT TRUE)
2021-03-10 22:27:49 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS asset_property_id_height_idx ON asset_property (id, height DESC)
2021-03-10 22:27:49 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS asset_property_height_id_idx ON asset_property (height, id)
2021-03-10 22:27:49 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS asset_property_asset_height_idx ON asset_property (asset_id, height DESC)
2021-03-10 22:27:49 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS asset_property_setter_property_idx ON asset_property (setter_id, property)
2021-03-10 22:27:49 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS blacklisted_open_api_nodes (host VARCHAR PRIMARY KEY, unblacklist_time INT)
2021-03-10 22:27:49 FINE: Will apply sql:
CREATE ALIAS CAN_BE_TRIMMED FOR "nxt.db.TrimmableDbTable.canBeTrimmed"
2021-03-10 22:27:50 INFO: nxt.enableTransactionRebroadcasting = "true"
2021-03-10 22:27:50 INFO: nxt.testUnconfirmedTransactions not defined, using default false
2021-03-10 22:27:50 INFO: nxt.maxUnconfirmedTransactions = "2000"
2021-03-10 22:27:50 INFO: nxt.trimDerivedTables = "true"
2021-03-10 22:27:50 INFO: nxt.numberOfForkConfirmations = "0"
2021-03-10 22:27:50 INFO: nxt.simulateEndlessDownload not defined, using default false
2021-03-10 22:27:50 INFO: nxt.trimFrequency = "1000"
2021-03-10 22:27:50 INFO: nxt.stopDownloadHeight not defined or not numeric, using default value 0
2021-03-10 22:27:50 INFO: nxt.disableGetMoreBlocksThread not defined, using default false
2021-03-10 22:27:50 INFO: nxt.trimFrequencyMultiplier.unconfirmed_transaction not defined or not numeric, using default value 1
2021-03-10 22:27:50 INFO: nxt.disableProcessTransactionsThread not defined, using default false
2021-03-10 22:27:50 INFO: nxt.disableRebroadcastTransactionsThread not defined, using default false
2021-03-10 22:27:50 INFO: nxt.disableRemoveUnconfirmedTransactionsThread not defined, using default false
2021-03-10 22:27:50 INFO: nxt.disableProcessWaitingTransactionsThread not defined, using default false
2021-03-10 22:27:50 INFO: nxt.trimFrequencyMultiplier.account not defined or not numeric, using default value 1
2021-03-10 22:27:50 INFO: nxt.trimFrequencyMultiplier.account_lease not defined or not numeric, using default value 1
2021-03-10 22:27:50 INFO: nxt.trimFrequencyMultiplier.account_info not defined or not numeric, using default value 1
2021-03-10 22:27:50 INFO: nxt.trimFrequencyMultiplier.public_key = "5"
2021-03-10 22:27:50 INFO: nxt.trimFrequencyMultiplier.account_asset not defined or not numeric, using default value 1
2021-03-10 22:27:50 INFO: nxt.trimFrequencyMultiplier.account_currency not defined or not numeric, using default value 1
2021-03-10 22:27:50 INFO: nxt.trimFrequencyMultiplier.account_property not defined or not numeric, using default value 1
2021-03-10 22:27:50 INFO: nxt.enablePublicKeyCache = "true"
2021-03-10 22:27:50 INFO: nxt.trimFrequencyMultiplier.account_control_phasing not defined or not numeric, using default value 1
2021-03-10 22:27:50 INFO: nxt.ledgerTrimKeep = "30000"
2021-03-10 22:27:50 INFO: nxt.ledgerAccounts = "*"
2021-03-10 22:27:50 INFO: Account ledger is tracking all accounts
2021-03-10 22:27:50 INFO: nxt.ledgerLogUnconfirmed = "2"
2021-03-10 22:27:50 INFO: nxt.trimFrequencyMultiplier.alias = "5"
2021-03-10 22:27:50 INFO: nxt.trimFrequencyMultiplier.alias_offer not defined or not numeric, using default value 1
2021-03-10 22:27:50 INFO: nxt.trimFrequencyMultiplier.asset not defined or not numeric, using default value 1
2021-03-10 22:27:50 INFO: nxt.trimFrequencyMultiplier.asset_property not defined or not numeric, using default value 1
2021-03-10 22:27:50 INFO: nxt.trimFrequencyMultiplier.tag not defined or not numeric, using default value 1
2021-03-10 22:27:50 INFO: nxt.trimFrequencyMultiplier.goods not defined or not numeric, using default value 1
2021-03-10 22:27:50 INFO: nxt.trimFrequencyMultiplier.purchase not defined or not numeric, using default value 1
2021-03-10 22:27:50 INFO: nxt.trimFrequencyMultiplier.purchase_feedback not defined or not numeric, using default value 1
2021-03-10 22:27:50 INFO: nxt.trimFrequencyMultiplier.purchase_public_feedback not defined or not numeric, using default value 1
2021-03-10 22:27:51 INFO: nxt.trimFrequencyMultiplier.ask_order not defined or not numeric, using default value 1
2021-03-10 22:27:51 INFO: nxt.trimFrequencyMultiplier.bid_order not defined or not numeric, using default value 1
2021-03-10 22:27:51 INFO: nxt.processPolls = "true"
2021-03-10 22:27:51 INFO: nxt.trimFrequencyMultiplier.poll not defined or not numeric, using default value 1
2021-03-10 22:27:51 INFO: nxt.trimFrequencyMultiplier.poll_result not defined or not numeric, using default value 1
2021-03-10 22:27:51 INFO: nxt.trimFrequencyMultiplier.phasing_poll not defined or not numeric, using default value 1
2021-03-10 22:27:51 INFO: nxt.trimFrequencyMultiplier.phasing_poll_voter not defined or not numeric, using default value 1
2021-03-10 22:27:51 INFO: nxt.trimFrequencyMultiplier.phasing_poll_linked_transaction not defined or not numeric, using default value 1
2021-03-10 22:27:51 INFO: nxt.trimFrequencyMultiplier.phasing_poll_result not defined or not numeric, using default value 1
2021-03-10 22:27:51 INFO: nxt.trimFrequencyMultiplier.trade not defined or not numeric, using default value 1
2021-03-10 22:27:51 INFO: nxt.trimFrequencyMultiplier.asset_transfer not defined or not numeric, using default value 1
2021-03-10 22:27:51 INFO: nxt.trimFrequencyMultiplier.asset_history not defined or not numeric, using default value 1
2021-03-10 22:27:51 INFO: nxt.trimFrequencyMultiplier.asset_dividend not defined or not numeric, using default value 1
2021-03-10 22:27:51 INFO: nxt.deleteProcessedVotes = "true"
2021-03-10 22:27:51 INFO: nxt.trimFrequencyMultiplier.vote not defined or not numeric, using default value 1
2021-03-10 22:27:51 INFO: nxt.trimFrequencyMultiplier.phasing_vote not defined or not numeric, using default value 1
2021-03-10 22:27:51 INFO: nxt.trimFrequencyMultiplier.currency not defined or not numeric, using default value 1
2021-03-10 22:27:51 INFO: nxt.trimFrequencyMultiplier.currency_supply not defined or not numeric, using default value 1
2021-03-10 22:27:51 INFO: nxt.trimFrequencyMultiplier.buy_offer not defined or not numeric, using default value 1
2021-03-10 22:27:51 INFO: nxt.trimFrequencyMultiplier.sell_offer not defined or not numeric, using default value 1
2021-03-10 22:27:51 INFO: nxt.trimFrequencyMultiplier.currency_founder not defined or not numeric, using default value 1
2021-03-10 22:27:51 INFO: nxt.trimFrequencyMultiplier.currency_mint not defined or not numeric, using default value 1
2021-03-10 22:27:51 INFO: nxt.trimFrequencyMultiplier.currency_transfer not defined or not numeric, using default value 1
2021-03-10 22:27:51 INFO: nxt.trimFrequencyMultiplier.exchange not defined or not numeric, using default value 1
2021-03-10 22:27:51 INFO: nxt.trimFrequencyMultiplier.exchange_request not defined or not numeric, using default value 1
2021-03-10 22:27:51 INFO: nxt.deleteFinishedShufflings = "false"
2021-03-10 22:27:51 INFO: nxt.trimFrequencyMultiplier.shuffling not defined or not numeric, using default value 1
2021-03-10 22:27:51 INFO: nxt.trimFrequencyMultiplier.shuffling_participant not defined or not numeric, using default value 1
2021-03-10 22:27:51 INFO: nxt.trimFrequencyMultiplier.shuffling_data not defined or not numeric, using default value 1
2021-03-10 22:27:51 INFO: nxt.trimFrequencyMultiplier.prunable_message not defined or not numeric, using default value 1
2021-03-10 22:27:51 INFO: nxt.trimFrequencyMultiplier.tagged_data not defined or not numeric, using default value 1
2021-03-10 22:27:51 INFO: nxt.trimFrequencyMultiplier.tagged_data_timestamp not defined or not numeric, using default value 1
2021-03-10 22:27:51 INFO: nxt.trimFrequencyMultiplier.tagged_data_extend not defined or not numeric, using default value 1
2021-03-10 22:27:51 INFO: nxt.trimFrequencyMultiplier.data_tag not defined or not numeric, using default value 1
2021-03-10 22:27:51 INFO: nxt.maxPeerRequestSize not defined or not numeric, using default value 1048576
2021-03-10 22:27:51 INFO: nxt.maxPeerResponseSize not defined or not numeric, using default value 1048576
2021-03-10 22:27:51 INFO: nxt.maxPeerMessageSize not defined or not numeric, using default value 10485760
2021-03-10 22:27:51 INFO: nxt.hideErrorDetails = "false"
2021-03-10 22:27:51 INFO: nxt.myPlatform not defined
2021-03-10 22:27:51 INFO: nxt.myAddress not defined
2021-03-10 22:27:51 INFO: nxt.peerServerPort = "7862"
2021-03-10 22:27:51 INFO: nxt.shareMyAddress = "true"
2021-03-10 22:27:51 INFO: nxt.enablePeerUPnP = "true"
2021-03-10 22:27:51 INFO: nxt.myHallmark not defined
2021-03-10 22:27:51 INFO: nxt.adminPassword = "{not logged}"
2021-03-10 22:27:51 INFO: nxt.maxAPIRecords = "100"
2021-03-10 22:27:51 INFO: nxt.enableAPIUPnP = "false"
2021-03-10 22:27:51 INFO: nxt.apiServerIdleTimeout = "30000"
2021-03-10 22:27:51 INFO: nxt.apiServerCORS = "true"
2021-03-10 22:27:51 INFO: nxt.forwardedForHeader not defined
2021-03-10 22:27:51 INFO: nxt.allowedBotHosts = "127.0.0.1; localhost; [0:0:0:0:0:0:0:1];"
2021-03-10 22:27:51 INFO: nxt.enableAPIServer = "true"
2021-03-10 22:27:51 INFO: nxt.apiServerPort = "7863"
2021-03-10 22:27:51 INFO: nxt.apiServerSSLPort = "7876"
2021-03-10 22:27:51 INFO: nxt.apiServerHost = "0.0.0.0"
2021-03-10 22:27:51 INFO: nxt.disableAdminPassword = "false"
2021-03-10 22:27:52 INFO: nxt.apiSSL = "false"
2021-03-10 22:27:52 INFO: API server using HTTP port 7863
2021-03-10 22:27:52 INFO: nxt.apiResourceBase = "./html/www"
2021-03-10 22:27:52 INFO: nxt.apiWelcomeFile = "index.html"
2021-03-10 22:27:52 INFO: nxt.javadocResourceBase = "./html/doc"
2021-03-10 22:27:52 INFO: nxt.maxUploadFileSize not defined or not numeric, using default value 0
2021-03-10 22:27:52 INFO: nxt.maxUploadFileSize not defined or not numeric, using default value 0
2021-03-10 22:27:52 INFO: nxt.enableAPIServerGZIPFilter not defined, using default false
2021-03-10 22:27:52 INFO: nxt.apiFrameOptionsSameOrigin = "true"
2021-03-10 22:27:52 INFO: nxt.apiCustomSetupImpl not defined
2021-03-10 22:27:52 FINE: My peer info:
{"application":"SundaCoin","services":"0","version":"1.12.2","platform":"Mac OS X x86_64","shareAddress":true}
2021-03-10 22:27:52 INFO: nxt.defaultPeers not defined
2021-03-10 22:27:52 INFO: nxt.wellKnownPeers not defined
2021-03-10 22:27:52 INFO: nxt.knownBlacklistedPeers not defined
2021-03-10 22:27:52 INFO: nxt.maxNumberOfInboundConnections = "2000"
2021-03-10 22:27:52 INFO: nxt.maxNumberOfOutboundConnections = "50"
2021-03-10 22:27:52 INFO: nxt.maxNumberOfConnectedPublicPeers = "20"
2021-03-10 22:27:52 INFO: nxt.maxNumberOfKnownPeers = "2000"
2021-03-10 22:27:52 INFO: nxt.minNumberOfKnownPeers = "1000"
2021-03-10 22:27:52 INFO: nxt.connectTimeout = "10000"
2021-03-10 22:27:52 INFO: nxt.readTimeout = "20000"
2021-03-10 22:27:52 INFO: nxt.enableHallmarkProtection = "true"
2021-03-10 22:27:52 INFO: nxt.pushThreshold = "0"
2021-03-10 22:27:52 INFO: nxt.pullThreshold = "0"
2021-03-10 22:27:52 INFO: nxt.useWebSockets = "true"
2021-03-10 22:27:52 INFO: nxt.webSocketIdleTimeout = "900000"
2021-03-10 22:27:52 INFO: nxt.enablePeerServerGZIPFilter = "true"
2021-03-10 22:27:52 INFO: nxt.blacklistingPeriod = "600000"
2021-03-10 22:27:52 INFO: nxt.communicationLoggingMask = "0"
2021-03-10 22:27:52 INFO: nxt.sendToPeersLimit = "10"
2021-03-10 22:27:52 INFO: nxt.usePeersDb = "true"
2021-03-10 22:27:52 INFO: nxt.savePeers = "true"
2021-03-10 22:27:52 INFO: nxt.getMorePeers = "true"
2021-03-10 22:27:52 INFO: nxt.cjdnsOnly = "false"
2021-03-10 22:27:52 INFO: nxt.ignorePeerAnnouncedAddress = "false"
2021-03-10 22:27:52 INFO: Using a proxy, will not create outbound websockets.
2021-03-10 22:27:52 INFO: nxt.disablePeerConnectingThread not defined, using default false
2021-03-10 22:27:52 INFO: nxt.disablePeerUnBlacklistingThread not defined, using default false
2021-03-10 22:27:52 INFO: nxt.disableGetMorePeersThread not defined, using default false
2021-03-10 22:27:52 INFO: nxt.peerServerHost = "127.0.0.1"
2021-03-10 22:27:52 INFO: nxt.peerServerIdleTimeout = "30000"
2021-03-10 22:27:53 INFO: nxt.enablePeerServerDoSFilter = "true"
2021-03-10 22:27:53 INFO: nxt.peerServerDoSFilter.maxRequestsPerSec = "30"
2021-03-10 22:27:53 INFO: nxt.peerServerDoSFilter.delayMs = "1000"
2021-03-10 22:27:53 INFO: nxt.peerServerDoSFilter.maxRequestMs = "300000"
2021-03-10 22:27:53 INFO: nxt.enableAPIProxy = "true"
2021-03-10 22:27:53 INFO: nxt.apiProxyBlacklistingPeriod = "7200"
2021-03-10 22:27:53 INFO: nxt.forceAPIProxyServerURL not defined
2021-03-10 22:27:54 INFO: nxt.disableAPIProxyPeersUpdateThread not defined, using default false
2021-03-10 22:27:54 INFO: nxt.proxyBootstrapNodes not defined
2021-03-10 22:27:55 INFO: nxt.maxNumberOfForgers = "100"
2021-03-10 22:27:55 INFO: nxt.enableFakeForging not defined, using default false
2021-03-10 22:27:55 INFO: nxt.disableGenerateBlocksThread not defined, using default false
2021-03-10 22:27:55 INFO: nxt.addOns not defined
2021-03-10 22:27:55 INFO: nxt.disabledAPIs not defined
2021-03-10 22:27:55 INFO: nxt.disabledAPITags not defined
2021-03-10 22:27:55 INFO: nxt.debugTraceQuote = """
2021-03-10 22:27:55 INFO: nxt.debugTraceSeparator = "	"
2021-03-10 22:27:55 INFO: nxt.debugLogUnconfirmed = "false"
2021-03-10 22:27:55 INFO: nxt.debugTraceAccounts not defined
2021-03-10 22:27:55 INFO: nxt.debugTraceLog = "nxt-trace.csv"
2021-03-10 22:27:55 FINE: Running 2 tasks...
2021-03-10 22:27:55 FINE: Loading known peers from the database...
2021-03-10 22:27:55 INFO: Genesis block not in database, starting from scratch
2021-03-10 22:27:56 FINE: Loading public keys
2021-03-10 22:28:08 FINE: Loaded 249704 public keys
2021-03-10 22:28:08 FINE: Loading genesis amounts
2021-03-10 22:29:24 FINE: Total balance 99999999999957856.000000 SND
2021-03-10 22:29:24 FINE: Creating search index on account_info (name,description)
2021-03-10 22:29:25 INFO: Lucene search index created for table PUBLIC.ACCOUNT_INFO
2021-03-10 22:29:25 FINE: Creating search index on asset (name,description)
2021-03-10 22:29:25 INFO: Lucene search index created for table PUBLIC.ASSET
2021-03-10 22:29:25 FINE: Creating search index on goods (name,description,tags)
2021-03-10 22:29:25 INFO: Lucene search index created for table PUBLIC.GOODS
2021-03-10 22:29:25 FINE: Creating search index on poll (name,description)
2021-03-10 22:29:25 INFO: Lucene search index created for table PUBLIC.POLL
2021-03-10 22:29:25 FINE: Creating search index on currency (code,name,description)
2021-03-10 22:29:25 INFO: Lucene search index created for table PUBLIC.CURRENCY
2021-03-10 22:29:25 FINE: Creating search index on tagged_data (name,description,tags)
2021-03-10 22:29:25 INFO: Lucene search index created for table PUBLIC.TAGGED_DATA
2021-03-10 22:29:25 FINE: Database transaction required 89.876 seconds at height 0
  nxt.BlockchainProcessorImpl.addGenesisBlock(BlockchainProcessorImpl.java:1330)
  nxt.BlockchainProcessorImpl.lambda$new$6(BlockchainProcessorImpl.java:995)
  nxt.util.ThreadPool.lambda$runAll$1(ThreadPool.java:126)
2021-03-10 22:29:25 INFO: nxt.forceScan = "false"
2021-03-10 22:29:25 FINE: Running 3 final tasks...
2021-03-10 22:29:25 INFO: nxt.apiServerEnforcePOST = "true"
2021-03-10 22:29:25 INFO: nxt.apiFixResponseContentType = "false"
2021-03-10 22:29:25 INFO: Looking for UPnP gateway device...
2021-03-10 22:29:25 INFO: nxt.upnpGatewayTimeout not defined or not numeric, using default value 7000
2021-03-10 22:29:25 INFO: nxt.upnpDiscoverTimeout not defined or not numeric, using default value 3000
2021-03-10 22:29:25 FINE: UPnP gateway device found on 192.168.10.218
2021-03-10 22:29:25 FINE: Using UPnP gateway device on 192.168.10.218
2021-03-10 22:29:25 INFO: External IP address is 192.168.1.2
2021-03-10 22:29:25 FINE: Unable to map port 7862
2021-03-10 22:29:25 FINE: Start trusted proxy bootstrap
2021-03-10 22:29:25 SEVERE: Failed to start API server
java.lang.IllegalArgumentException: port out of range:7863
	at java.net.InetSocketAddress.checkPort(InetSocketAddress.java:143)
	at java.net.InetSocketAddress.<init>(InetSocketAddress.java:224)
	at org.eclipse.jetty.server.ServerConnector.openAcceptChannel(ServerConnector.java:349)
	at org.eclipse.jetty.server.ServerConnector.open(ServerConnector.java:319)
	at org.eclipse.jetty.server.AbstractNetworkConnector.doStart(AbstractNetworkConnector.java:80)
	at org.eclipse.jetty.server.ServerConnector.doStart(ServerConnector.java:235)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.server.Server.doStart(Server.java:406)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at nxt.http.API.lambda$static$2(API.java:307)
	at nxt.util.ThreadPool.lambda$runAll$1(ThreadPool.java:126)
	at java.lang.Thread.run(Thread.java:748)
2021-03-10 22:29:25 FINE: Trusted proxy bootstrap failed
2021-03-10 22:29:25 SEVERE: Failed to start peer networking server
java.lang.IllegalArgumentException: port out of range:7862
	at java.net.InetSocketAddress.checkPort(InetSocketAddress.java:143)
	at java.net.InetSocketAddress.<init>(InetSocketAddress.java:224)
	at org.eclipse.jetty.server.ServerConnector.openAcceptChannel(ServerConnector.java:349)
	at org.eclipse.jetty.server.ServerConnector.open(ServerConnector.java:319)
	at org.eclipse.jetty.server.AbstractNetworkConnector.doStart(AbstractNetworkConnector.java:80)
	at org.eclipse.jetty.server.ServerConnector.doStart(ServerConnector.java:235)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.server.Server.doStart(Server.java:406)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at nxt.peer.Peers$Init.lambda$static$0(Peers.java:456)
	at nxt.util.ThreadPool.lambda$runAll$1(ThreadPool.java:126)
	at java.lang.Thread.run(Thread.java:748)
2021-03-10 22:29:25 SEVERE: Errors running startup tasks:
java.lang.IllegalArgumentException: port out of range:7863
java.lang.IllegalArgumentException: port out of range:7862

java.lang.RuntimeException: Errors running startup tasks:
java.lang.IllegalArgumentException: port out of range:7863
java.lang.IllegalArgumentException: port out of range:7862

	at nxt.util.ThreadPool.runAll(ThreadPool.java:144)
	at nxt.util.ThreadPool.start(ThreadPool.java:78)
	at nxt.Nxt$Init.<clinit>(Nxt.java:397)
	at nxt.Nxt.init(Nxt.java:328)
	at nxt.Nxt.main(Nxt.java:315)
2021-03-10 22:29:25 INFO: Shutting down...
2021-03-10 22:29:25 INFO: nxt.maxNumberOfMonitors = "100"
2021-03-10 22:29:25 INFO: shutting down networkService
2021-03-10 22:29:25 FINE: Mapping deleted for port 7862
2021-03-10 22:29:25 INFO: shutting down sendingService
2021-03-10 22:29:25 INFO: shutting down peersService
2021-03-10 22:29:25 INFO: nxt.disableCompactOnShutdown = "false"
2021-03-10 22:29:25 INFO: Shutting down with compacting...
2021-03-10 22:29:32 INFO: Database shutdown completed
2021-03-10 22:29:32 INFO: SundaCoin server 1.12.2 stopped.
